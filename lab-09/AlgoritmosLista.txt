//função para determinar se um numero é primo
int ehPrimo(long unsigned int n) {
   int i;
      if(n<=1) return 0;
      if(n==2) return 1;
      if(n%2==0) return 0;
      for(i=3; i<sqrt(n)+1; i+=2) {
         if(n%i==0) return 0;
      }
      return 1;
}





#define NITER 5
int vet[N]; //variavel global

void *thread (void *threadid) {
  int *tid = (int*) threadid; aux=1;
  vet[*tid] = *tid;
  printf("Thread %d chegou na barreira %d\n", *tid, aux);
  barreira(); //implementar espera coletiva
  printf("Thread %d saiu da barreira %d\n", *tid, aux);
  aux++;

  for (int i=0; i<NITER; i++) {
     vet[*tid] = vet[*tid] * vet[*tid] + vet[*tid-1];
     printf("Thread %d chegou na barreira %d\n", *tid, aux);
     barreira(); //implementar espera coletiva 
     printf("Thread %d saiu da barreira %d\n", *tid, aux);
     aux++;
  }
  free(tid);
}